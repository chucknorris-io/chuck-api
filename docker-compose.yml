version: '2.1'

services:
  web:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: chucknorris-web
    # image: nginx:latest
    depends_on:
      php:
        condition: service_started
    networks:
      - chucknorris-network
    ports:
      - "8080:80"
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf

  php:
    build:
      context: .
      dockerfile: ./docker/fpm/Dockerfile
    container_name: chucknorris-api
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/chuck
      REDIS_URL: redis://redis:6379
    volumes:
      - .:/var/www/html
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_started
    networks:
      - chucknorris-network

  redis:
    image: redis
    container_name: chucknorris-redis
    networks:
      - chucknorris-network

  postgres:
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
      args:
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_DEFAULT_REGION
        - POSTGRES_DB
        - POSTGRES_USER
        - POSTGRES_PASSWORD
    container_name: chucknorris-db
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      POSTGRES_DB: chuck
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - chucknorris-network
    volumes:
      - ./docker/postgres/data:/docker-entrypoint-initdb.d/

networks:
  chucknorris-network:
    driver: bridge
