plugins {
    id "com.palantir.docker" version "0.36.0"
    id 'org.springframework.boot'
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${Version.LOMBOK}"

    implementation "com.amazonaws:aws-java-sdk:1.11.561"
    implementation "com.fasterxml.jackson.core:jackson-core:2.17.1"
    implementation "com.rometools:rome:1.12.0"
    implementation "com.vladmihalcea:hibernate-types-52:2.4.0"
    implementation "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0"
    implementation "org.hibernate:hibernate-validator:6.0.16.Final"
    implementation "org.postgresql:postgresql:42.2.9"
    implementation "org.projectlombok:lombok:${Version.LOMBOK}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "com.google.guava:guava:33.2.1-jre"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "junit:junit:4.12"
}

tasks {
    bootJar {
        manifest.attributes("Multi-Release": "true")

        archiveBaseName.set(project.name)

        if (project.hasProperty("archiveName")) {
            archiveFileName.set(project.properties["archiveName"] as String)
        }
    }

    docker {
        dependsOn bootJar

        name = "${project.properties.group}/${project.name}"

        tag("herokuProduction", "registry.heroku.com/chucky/web")

        dockerfile file("${projectDir}/src/main/docker/Dockerfile")
        files tasks.bootJar.outputs
        buildArgs([JAR_FILE: bootJar.getArchiveFileName().get()] as Map<String, String>)
    }
}
