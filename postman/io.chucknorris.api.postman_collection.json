{
	"info": {
		"_postman_id": "2f0a0785-ba92-4cde-86c6-5a6e11259912",
		"name": "io.chucknorris.api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Jokes",
			"item": [
				{
					"name": "errors",
					"item": [
						{
							"name": "404 - Joke not found (json)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
										"exec": [
											"var schema = {",
											"  \"timestamp\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"status\": {",
											"    \"type\": \"integer\"",
											"  },",
											"  \"error\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"message\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"path\": {",
											"    \"type\": \"string\"",
											"  }",
											"}",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Headers are correct\", function () {",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Origin\",",
											"    \"*\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Credentials\",",
											"    \"true\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Content-Type\",",
											"    \"application/json;charset=UTF-8\"",
											"  );",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Origin",
										"value": "*",
										"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/jokes/bwoz2uwsqnwmyawyxdvo1z",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"jokes",
										"bwoz2uwsqnwmyawyxdvo1z"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Joke not found (text)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Headers are correct\", function () {",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Origin\",",
											"    \"*\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Credentials\",",
											"    \"true\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Content-Type\",",
											"    \"text/plain;charset=UTF-8\"",
											"  );",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain",
										"type": "text"
									},
									{
										"key": "Origin",
										"value": "*",
										"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/jokes/bwoz2uwsqnwmyawyxdvo1z",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"jokes",
										"bwoz2uwsqnwmyawyxdvo1z"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/jokes/{id} (html)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"text/html;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"var $ = cheerio.load(pm.response.text())",
									"",
									"pm.test(\"Matches title\", () => { ",
									"  pm.expect($('title').text()).to.not.be.empty;",
									"  pm.expect($('title').text()).to.equal('Chuck Norris finished World of Warcraft.');",
									"});",
									"",
									"pm.test('Includes a joke', () => {",
									"  pm.expect($('#joke_value').text()).to.equal('Chuck Norris finished World of Warcraft.');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html"
							},
							{
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"key": "Origin",
								"type": "text",
								"value": "*"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/bwoz2uwsqnwmyawyxdvo1w",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"bwoz2uwsqnwmyawyxdvo1w"
							]
						}
					},
					"response": []
				},
				{
					"name": "/jokes/{id} (json)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
								"exec": [
									"var schema = {",
									"  \"categories\": {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"created_at\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"icon_url\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"id\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"updated_at\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"value\": {",
									"    \"type\": \"string\"",
									"  }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"application/json;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test('Schema is valid', function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Origin",
								"value": "*",
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/bwoz2uwsqnwmyawyxdvo1w",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"bwoz2uwsqnwmyawyxdvo1w"
							]
						}
					},
					"response": []
				},
				{
					"name": "/jokes/{id} (text)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6628d54d-4327-418d-9601-e9538aa1b9df",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"text/plain;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"  pm.expect(pm.response.text()).to.include(\"Chuck Norris finished World of Warcraft.\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "*",
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/bwoz2uwsqnwmyawyxdvo1w",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"bwoz2uwsqnwmyawyxdvo1w"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "errors",
					"item": [
						{
							"name": "400 - Bad Request (json)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fc247793-9e2b-41a3-8d48-aa4dad010a3f",
										"exec": [
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"timestamp\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"status\": {",
											"      \"type\": \"integer\",",
											"      \"format\": \"int32\"",
											"    },",
											"    \"error\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"violations\": {",
											"      \"type\": \"object\"",
											"    },",
											"  }",
											"}",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Headers are correct\", function () {",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Origin\",",
											"    \"*\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Credentials\",",
											"    \"true\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Content-Type\",",
											"    \"application/json;charset=UTF-8\"",
											"  );",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Origin",
										"value": "*",
										"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/jokes/search?query=",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"jokes",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": ""
										}
									]
								},
								"description": "Free text search."
							},
							"response": []
						},
						{
							"name": "400 -Bad Request (text)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Headers are correct\", function () {",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Origin\",",
											"    \"*\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Credentials\",",
											"    \"true\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Content-Type\",",
											"    \"text/plain;charset=UTF-8\"",
											"  );",
											"});",
											"",
											"pm.test(\"Has a non-empty body\", function () {",
											"  pm.expect(pm.response.text().length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain",
										"type": "text"
									},
									{
										"key": "Origin",
										"value": "*",
										"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/jokes/search?query=",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"jokes",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/jokes/search (json)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc247793-9e2b-41a3-8d48-aa4dad010a3f",
								"exec": [
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"result\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$ref\": \"#/definitions/Joke\"",
									"      }",
									"    },",
									"    \"total\": {",
									"      \"type\": \"integer\",",
									"      \"format\": \"int32\"",
									"    }",
									"  }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"application/json;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test('Schema is valid', function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Origin",
								"value": "*",
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/search?query=roundhouse",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "roundhouse"
								}
							]
						},
						"description": "Free text search."
					},
					"response": []
				},
				{
					"name": "/jokes/search (text)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "675e0429-432d-4b51-b425-97f5c7385153",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"text/plain;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test(\"Has a non-empty body\", function () {",
									"  pm.expect(pm.response.text().length).to.be.above(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							},
							{
								"key": "Origin",
								"value": "*",
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/search?query=roundhouse",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "roundhouse"
								}
							]
						},
						"description": "Free text search."
					},
					"response": []
				}
			]
		},
		{
			"name": "Random",
			"item": [
				{
					"name": "errors",
					"item": [
						{
							"name": "404 - Category not found (json)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
										"exec": [
											"var schema = {",
											"  \"timestamp\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"status\": {",
											"    \"type\": \"integer\"",
											"  },",
											"  \"error\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"message\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"path\": {",
											"    \"type\": \"string\"",
											"  }",
											"}",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Headers are correct\", function () {",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Origin\",",
											"    \"*\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Credentials\",",
											"    \"true\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Content-Type\",",
											"    \"application/json;charset=UTF-8\"",
											"  );",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
										"key": "Origin",
										"type": "text",
										"value": "*"
									}
								],
								"url": {
									"raw": "{{base_url}}/jokes/random?category=category-does-not-exist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"jokes",
										"random"
									],
									"query": [
										{
											"key": "category",
											"value": "category-does-not-exist"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Category not found (text)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
										"exec": [
											"var schema = {",
											"  \"timestamp\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"status\": {",
											"    \"type\": \"integer\"",
											"  },",
											"  \"error\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"message\": {",
											"    \"type\": \"string\"",
											"  },",
											"  \"path\": {",
											"    \"type\": \"string\"",
											"  }",
											"}",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Headers are correct\", function () {",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Origin\",",
											"    \"*\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Access-Control-Allow-Credentials\",",
											"    \"true\"",
											"  );",
											"  pm.response.to.be.header(",
											"    \"Content-Type\",",
											"    \"text/plain;charset=UTF-8\"",
											"  );",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "text/plain"
									},
									{
										"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
										"key": "Origin",
										"type": "text",
										"value": "*"
									}
								],
								"url": {
									"raw": "{{base_url}}/jokes/random?category=category-does-not-exist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"jokes",
										"random"
									],
									"query": [
										{
											"key": "category",
											"value": "category-does-not-exist"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/jokes/random (json)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
								"exec": [
									"var schema = {",
									"  \"categories\": {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"created_at\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"icon_url\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"id\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"updated_at\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"value\": {",
									"    \"type\": \"string\"",
									"  }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"application/json;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test('Schema is valid', function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"key": "Origin",
								"type": "text",
								"value": "*"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/random",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"random"
							]
						}
					},
					"response": []
				},
				{
					"name": "/jokes/random (text)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6628d54d-4327-418d-9601-e9538aa1b9df",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"text/plain;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test(\"Has a non-empty body\", function () {",
									"  pm.expect(pm.response.text().length).to.be.above(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							},
							{
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"key": "Origin",
								"type": "text",
								"value": "*"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/random",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"random"
							]
						}
					},
					"response": []
				},
				{
					"name": "/jokes/random with category (json)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
								"exec": [
									"var schema = {",
									"  \"categories\": {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"created_at\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"icon_url\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"id\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"updated_at\": {",
									"    \"type\": \"string\"",
									"  },",
									"  \"value\": {",
									"    \"type\": \"string\"",
									"  }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"application/json;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test('Schema is valid', function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"pm.test(\"Has categories = ['dev']\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.categories).to.eql(['dev']);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"key": "Origin",
								"type": "text",
								"value": "*"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/random?category=dev",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"random"
							],
							"query": [
								{
									"key": "category",
									"value": "dev"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/jokes/random with category (text)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"text/plain;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test(\"Has a non-empty body\", function () {",
									"  pm.expect(pm.response.text().length).to.be.above(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							},
							{
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"key": "Origin",
								"type": "text",
								"value": "*"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/random?category=dev",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"random"
							],
							"query": [
								{
									"key": "category",
									"value": "dev"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "/jokes/categories (json)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b95a04f7-d3d2-4724-8a80-24536ee8041c",
								"exec": [
									"var schema = {",
									"  \"type\": \"array\",",
									"    \"items\": {",
									"      \"type\": \"string\"",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"application/json;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test('Schema is valid', function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Origin",
								"value": "*",
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"categories"
							]
						},
						"description": "Retrieve a list of available joke categories."
					},
					"response": []
				},
				{
					"name": "/jokes/categories (text)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1fafa3d8-8662-47ec-b151-31e633608c64",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Headers are correct\", function () {",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Origin\",",
									"    \"*\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Access-Control-Allow-Credentials\",",
									"    \"true\"",
									"  );",
									"  pm.response.to.be.header(",
									"    \"Content-Type\",",
									"    \"text/plain;charset=UTF-8\"",
									"  );",
									"});",
									"",
									"pm.test(\"Has a non-empty body\", function () {",
									"  pm.expect(pm.response.text().length).to.be.above(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							},
							{
								"key": "Origin",
								"value": "*",
								"description": "The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/jokes/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jokes",
								"categories"
							]
						},
						"description": "Retrieve a list of available joke categories."
					},
					"response": []
				}
			]
		},
		{
			"name": "Documentation",
			"item": [
				{
					"name": "documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/documentation",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"documentation"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Integration",
			"item": [
				{
					"name": "Slack",
					"item": [
						{
							"name": "chuck",
							"item": [
								{
									"name": "random joke",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
												"exec": [
													"var schema = {",
													"  \"type\": \"object\",",
													"  \"required\": [",
													"    \"icon_url\",",
													"    \"text\",",
													"    \"attachments\",",
													"    \"response_type\"",
													"  ],",
													"  \"properties\": {",
													"    \"icon_url\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"text\": {",
													"      \"type\": \"null\"",
													"    },",
													"    \"attachments\": {",
													"      \"type\": \"array\",",
													"      \"items\": {",
													"        \"type\": \"object\",",
													"        \"required\": [",
													"          \"fallback\",",
													"          \"mrkdwn_in\",",
													"          \"text\",",
													"          \"title\",",
													"          \"title_link\"",
													"        ],",
													"        \"properties\": {",
													"          \"fallback\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"mrkdwn_in\": {",
													"            \"type\": \"array\",",
													"            \"items\": {",
													"              \"type\": \"string\",",
													"              \"pattern\": \"^(.*)$\"",
													"            }",
													"          },",
													"          \"text\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title_link\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          }",
													"        }",
													"      }",
													"    },",
													"    \"response_type\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    }",
													"  }",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Headers are correct\", function () {",
													"  pm.response.to.be.header(",
													"    \"Content-Type\",",
													"    \"application/json;charset=UTF-8\"",
													"  );",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/integration/slack?token=deprecated&team_id=Txxxxxxxx&team_domain=jugendstil&channel_id=Dxxxxxxxx&channel_name=directmessage&user_id=Uxxxxxxxx&user_name=jean-claude-van-damme&command=/joke&text=&response_url=https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx&trigger_id=xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"integration",
												"slack"
											],
											"query": [
												{
													"key": "token",
													"value": "deprecated"
												},
												{
													"key": "team_id",
													"value": "Txxxxxxxx"
												},
												{
													"key": "team_domain",
													"value": "jugendstil"
												},
												{
													"key": "channel_id",
													"value": "Dxxxxxxxx"
												},
												{
													"key": "channel_name",
													"value": "directmessage"
												},
												{
													"key": "user_id",
													"value": "Uxxxxxxxx"
												},
												{
													"key": "user_name",
													"value": "jean-claude-van-damme"
												},
												{
													"key": "command",
													"value": "/joke"
												},
												{
													"key": "text",
													"value": ""
												},
												{
													"key": "response_url",
													"value": "https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "trigger_id",
													"value": "xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "free text search",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
												"exec": [
													"var schema = {",
													"  \"type\": \"object\",",
													"  \"required\": [",
													"    \"icon_url\",",
													"    \"text\",",
													"    \"attachments\",",
													"    \"response_type\"",
													"  ],",
													"  \"properties\": {",
													"    \"icon_url\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"text\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"attachments\": {",
													"      \"type\": \"array\",",
													"      \"items\": {",
													"        \"type\": \"object\",",
													"        \"required\": [",
													"          \"fallback\",",
													"          \"mrkdwn_in\",",
													"          \"text\",",
													"          \"title\",",
													"          \"title_link\"",
													"        ],",
													"        \"properties\": {",
													"          \"fallback\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"mrkdwn_in\": {",
													"            \"type\": \"array\",",
													"            \"items\": {",
													"              \"type\": \"string\",",
													"              \"pattern\": \"^(.*)$\"",
													"            }",
													"          },",
													"          \"text\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title_link\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          }",
													"        }",
													"      }",
													"    },",
													"    \"response_type\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    }",
													"  }",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Headers are correct\", function () {",
													"  pm.response.to.be.header(",
													"    \"Content-Type\",",
													"    \"application/json;charset=UTF-8\"",
													"  );",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{base_url}}/integration/slack?token=deprecated&team_id=Txxxxxxxx&team_domain=jugendstil&channel_id=Dxxxxxxxx&channel_name=directmessage&user_id=Uxxxxxxxx&user_name=jean-claude-van-damme&command=/joke&text=? Chuck&response_url=https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx&trigger_id=xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"integration",
												"slack"
											],
											"query": [
												{
													"key": "token",
													"value": "deprecated"
												},
												{
													"key": "team_id",
													"value": "Txxxxxxxx"
												},
												{
													"key": "team_domain",
													"value": "jugendstil"
												},
												{
													"key": "channel_id",
													"value": "Dxxxxxxxx"
												},
												{
													"key": "channel_name",
													"value": "directmessage"
												},
												{
													"key": "user_id",
													"value": "Uxxxxxxxx"
												},
												{
													"key": "user_name",
													"value": "jean-claude-van-damme"
												},
												{
													"key": "command",
													"value": "/joke"
												},
												{
													"key": "text",
													"value": "? Chuck"
												},
												{
													"key": "response_url",
													"value": "https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "trigger_id",
													"value": "xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "random joke from category",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
												"exec": [
													"var schema = {",
													"  \"type\": \"object\",",
													"  \"required\": [",
													"    \"icon_url\",",
													"    \"text\",",
													"    \"attachments\",",
													"    \"response_type\"",
													"  ],",
													"  \"properties\": {",
													"    \"icon_url\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"text\": {",
													"      \"type\": \"null\"",
													"    },",
													"    \"attachments\": {",
													"      \"type\": \"array\",",
													"      \"items\": {",
													"        \"type\": \"object\",",
													"        \"required\": [",
													"          \"fallback\",",
													"          \"mrkdwn_in\",",
													"          \"text\",",
													"          \"title\",",
													"          \"title_link\"",
													"        ],",
													"        \"properties\": {",
													"          \"fallback\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"mrkdwn_in\": {",
													"            \"type\": \"array\",",
													"            \"items\": {",
													"              \"type\": \"string\",",
													"              \"pattern\": \"^(.*)$\"",
													"            }",
													"          },",
													"          \"text\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title_link\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          }",
													"        }",
													"      }",
													"    },",
													"    \"response_type\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    }",
													"  }",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Headers are correct\", function () {",
													"  pm.response.to.be.header(",
													"    \"Content-Type\",",
													"    \"application/json;charset=UTF-8\"",
													"  );",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{base_url}}/integration/slack?token=deprecated&team_id=Txxxxxxxx&team_domain=jugendstil&channel_id=Dxxxxxxxx&channel_name=directmessage&user_id=Uxxxxxxxx&user_name=jean-claude-van-damme&command=/joke&text=dev&response_url=https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx&trigger_id=xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"integration",
												"slack"
											],
											"query": [
												{
													"key": "token",
													"value": "deprecated"
												},
												{
													"key": "team_id",
													"value": "Txxxxxxxx"
												},
												{
													"key": "team_domain",
													"value": "jugendstil"
												},
												{
													"key": "channel_id",
													"value": "Dxxxxxxxx"
												},
												{
													"key": "channel_name",
													"value": "directmessage"
												},
												{
													"key": "user_id",
													"value": "Uxxxxxxxx"
												},
												{
													"key": "user_name",
													"value": "jean-claude-van-damme"
												},
												{
													"key": "command",
													"value": "/joke"
												},
												{
													"key": "text",
													"value": "dev"
												},
												{
													"key": "response_url",
													"value": "https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "trigger_id",
													"value": "xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "random personalized joke",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
												"exec": [
													"var schema = {",
													"  \"type\": \"object\",",
													"  \"required\": [",
													"    \"icon_url\",",
													"    \"text\",",
													"    \"attachments\",",
													"    \"response_type\"",
													"  ],",
													"  \"properties\": {",
													"    \"icon_url\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"text\": {",
													"      \"type\": \"null\"",
													"    },",
													"    \"attachments\": {",
													"      \"type\": \"array\",",
													"      \"items\": {",
													"        \"type\": \"object\",",
													"        \"required\": [",
													"          \"fallback\",",
													"          \"mrkdwn_in\",",
													"          \"text\",",
													"          \"title\",",
													"          \"title_link\"",
													"        ],",
													"        \"properties\": {",
													"          \"fallback\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"mrkdwn_in\": {",
													"            \"type\": \"array\",",
													"            \"items\": {",
													"              \"type\": \"string\",",
													"              \"pattern\": \"^(.*)$\"",
													"            }",
													"          },",
													"          \"text\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title_link\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          }",
													"        }",
													"      }",
													"    },",
													"    \"response_type\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    }",
													"  }",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Headers are correct\", function () {",
													"  pm.response.to.be.header(",
													"    \"Content-Type\",",
													"    \"application/json;charset=UTF-8\"",
													"  );",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{base_url}}/integration/slack?token=deprecated&team_id=Txxxxxxxx&team_domain=jugendstil&channel_id=Dxxxxxxxx&channel_name=directmessage&user_id=Uxxxxxxxx&user_name=jean-claude-van-damme&command=/joke&text=@ Bob&response_url=https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx&trigger_id=xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"integration",
												"slack"
											],
											"query": [
												{
													"key": "token",
													"value": "deprecated"
												},
												{
													"key": "team_id",
													"value": "Txxxxxxxx"
												},
												{
													"key": "team_domain",
													"value": "jugendstil"
												},
												{
													"key": "channel_id",
													"value": "Dxxxxxxxx"
												},
												{
													"key": "channel_name",
													"value": "directmessage"
												},
												{
													"key": "user_id",
													"value": "Uxxxxxxxx"
												},
												{
													"key": "user_name",
													"value": "jean-claude-van-damme"
												},
												{
													"key": "command",
													"value": "/joke"
												},
												{
													"key": "text",
													"value": "@ Bob"
												},
												{
													"key": "response_url",
													"value": "https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "trigger_id",
													"value": "xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "categories",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
												"exec": [
													"var schema = {",
													"  \"type\": \"object\",",
													"  \"required\": [",
													"    \"icon_url\",",
													"    \"text\",",
													"    \"attachments\",",
													"    \"response_type\"",
													"  ],",
													"  \"properties\": {",
													"    \"icon_url\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"text\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"attachments\": {",
													"      \"type\": \"null\"",
													"    },",
													"    \"response_type\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    }",
													"  }",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Headers are correct\", function () {",
													"  pm.response.to.be.header(",
													"    \"Content-Type\",",
													"    \"application/json;charset=UTF-8\"",
													"  );",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{base_url}}/integration/slack?token=deprecated&team_id=Txxxxxxxx&team_domain=jugendstil&channel_id=Dxxxxxxxx&channel_name=directmessage&user_id=Uxxxxxxxx&user_name=jean-claude-van-damme&command=/joke&text=-cat&response_url=https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx&trigger_id=xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"integration",
												"slack"
											],
											"query": [
												{
													"key": "token",
													"value": "deprecated"
												},
												{
													"key": "team_id",
													"value": "Txxxxxxxx"
												},
												{
													"key": "team_domain",
													"value": "jugendstil"
												},
												{
													"key": "channel_id",
													"value": "Dxxxxxxxx"
												},
												{
													"key": "channel_name",
													"value": "directmessage"
												},
												{
													"key": "user_id",
													"value": "Uxxxxxxxx"
												},
												{
													"key": "user_name",
													"value": "jean-claude-van-damme"
												},
												{
													"key": "command",
													"value": "/joke"
												},
												{
													"key": "text",
													"value": "-cat"
												},
												{
													"key": "response_url",
													"value": "https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "trigger_id",
													"value": "xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "get joke by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
												"exec": [
													"var schema = {",
													"  \"type\": \"object\",",
													"  \"required\": [",
													"    \"icon_url\",",
													"    \"text\",",
													"    \"attachments\",",
													"    \"response_type\"",
													"  ],",
													"  \"properties\": {",
													"    \"icon_url\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"text\": {",
													"      \"type\": \"null\"",
													"    },",
													"    \"attachments\": {",
													"      \"type\": \"array\",",
													"      \"items\": {",
													"        \"type\": \"object\",",
													"        \"required\": [",
													"          \"fallback\",",
													"          \"mrkdwn_in\",",
													"          \"text\",",
													"          \"title\",",
													"          \"title_link\"",
													"        ],",
													"        \"properties\": {",
													"          \"fallback\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"mrkdwn_in\": {",
													"            \"type\": \"array\",",
													"            \"items\": {",
													"              \"type\": \"string\",",
													"              \"pattern\": \"^(.*)$\"",
													"            }",
													"          },",
													"          \"text\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title_link\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          }",
													"        }",
													"      }",
													"    },",
													"    \"response_type\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    }",
													"  }",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Headers are correct\", function () {",
													"  pm.response.to.be.header(",
													"    \"Content-Type\",",
													"    \"application/json;charset=UTF-8\"",
													"  );",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{base_url}}/integration/slack?token=deprecated&team_id=Txxxxxxxx&team_domain=jugendstil&channel_id=Dxxxxxxxx&channel_name=directmessage&user_id=Uxxxxxxxx&user_name=jean-claude-van-damme&command=/joke&text=: bwoz2uwsqnwmyawyxdvo1w&response_url=https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx&trigger_id=xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"integration",
												"slack"
											],
											"query": [
												{
													"key": "token",
													"value": "deprecated"
												},
												{
													"key": "team_id",
													"value": "Txxxxxxxx"
												},
												{
													"key": "team_domain",
													"value": "jugendstil"
												},
												{
													"key": "channel_id",
													"value": "Dxxxxxxxx"
												},
												{
													"key": "channel_name",
													"value": "directmessage"
												},
												{
													"key": "user_id",
													"value": "Uxxxxxxxx"
												},
												{
													"key": "user_name",
													"value": "jean-claude-van-damme"
												},
												{
													"key": "command",
													"value": "/joke"
												},
												{
													"key": "text",
													"value": ": bwoz2uwsqnwmyawyxdvo1w"
												},
												{
													"key": "response_url",
													"value": "https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "trigger_id",
													"value": "xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "help",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "670a9e46-d8a4-4c21-8a33-d409a7efb4cb",
												"exec": [
													"var schema = {",
													"  \"type\": \"object\",",
													"  \"required\": [",
													"    \"attachments\",",
													"    \"icon_url\",",
													"    \"response_type\",",
													"    \"text\"",
													"  ],",
													"  \"properties\": {",
													"    \"attachments\": {",
													"      \"type\": \"array\",",
													"      \"items\": {",
													"        \"type\": \"object\",",
													"        \"required\": [",
													"          \"fallback\",",
													"          \"mrkdwn_in\",",
													"          \"text\",",
													"          \"title\",",
													"          \"title_link\"",
													"        ],",
													"        \"properties\": {",
													"          \"fallback\": {",
													"            \"type\": \"null\"",
													"          },",
													"          \"mrkdwn_in\": {",
													"            \"type\": \"array\",",
													"            \"items\": {",
													"              \"type\": \"string\",",
													"              \"pattern\": \"^(.*)$\"",
													"            }",
													"          },",
													"          \"text\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title\": {",
													"            \"type\": \"string\",",
													"            \"pattern\": \"^(.*)$\"",
													"          },",
													"          \"title_link\": {",
													"            \"type\": \"null\"",
													"          }",
													"        }",
													"      }",
													"    },",
													"    \"icon_url\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"response_type\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    },",
													"    \"text\": {",
													"      \"type\": \"string\",",
													"      \"pattern\": \"^(.*)$\"",
													"    }",
													"  }",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Headers are correct\", function () {",
													"  pm.response.to.be.header(",
													"    \"Content-Type\",",
													"    \"application/json;charset=UTF-8\"",
													"  );",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{base_url}}/integration/slack?token=deprecated&team_id=Txxxxxxxx&team_domain=jugendstil&channel_id=Dxxxxxxxx&channel_name=directmessage&user_id=Uxxxxxxxx&user_name=jean-claude-van-damme&command=/joke&text=help&response_url=https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx&trigger_id=xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"integration",
												"slack"
											],
											"query": [
												{
													"key": "token",
													"value": "deprecated"
												},
												{
													"key": "team_id",
													"value": "Txxxxxxxx"
												},
												{
													"key": "team_domain",
													"value": "jugendstil"
												},
												{
													"key": "channel_id",
													"value": "Dxxxxxxxx"
												},
												{
													"key": "channel_name",
													"value": "directmessage"
												},
												{
													"key": "user_id",
													"value": "Uxxxxxxxx"
												},
												{
													"key": "user_name",
													"value": "jean-claude-van-damme"
												},
												{
													"key": "command",
													"value": "/joke"
												},
												{
													"key": "text",
													"value": "help"
												},
												{
													"key": "response_url",
													"value": "https://hooks.slack.com/commands/team_id/xxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "trigger_id",
													"value": "xxxxxxxxxxxx.xxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}